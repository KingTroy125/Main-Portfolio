<section id="contact" class="py-24 border-t border-[#ffffff10] section-transition">
  <div class="max-w-5xl mx-auto">
    <div class="text-center mb-14">
      <p id="clock" class="text-[var(--white-icon)] mb-4 text-lg opacity-70"></p>
      
      <h2 class="text-5xl md:text-6xl font-medium text-[var(--white)] mb-6 animate-title">
        and... it's always the right <br /> time for <span class="text-[var(--sec)] gradient-text">impactful design</span>
      </h2>
      
      <p class="text-[var(--white-icon)] text-xl max-w-2xl mx-auto mb-10">
        Ready to bring your vision to life? Book a call or send an email, and let's make it happen!
      </p>
      
      <div class="flex justify-center gap-4 mb-16">
        <a 
          href="https://calendly.com/tristan-hendricks" 
          target="_blank"
          class="flex items-center gap-3 px-6 py-3 bg-[#1414149c] hover:bg-[var(--white-icon-tr)] transition-all duration-300 rounded-full border border-[var(--white-icon-tr)] hover:shadow-[0_0_15px_rgba(164,118,255,0.2)] hover-lift"
        >
          <img src="https://avatar.vercel.sh/th" alt="Avatar" class="w-8 h-8 rounded-full border border-[var(--sec)]" />
          <span class="text-[var(--white)]">Book a 15-min call</span>
        </a>
      </div>
    </div>
  </div>
</section>

<script type="module" is:inline>
  // Form submission handling
  const form = document.getElementById("contact-form");
  const formMessage = document.getElementById("form-message");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);

    try {
      const response = await fetch(form.action, {
        method: "POST",
        body: formData,
        headers: { Accept: "application/json" },
      });
      if (response.ok) {
        form.reset();
        form.style.display = "none";
        formMessage.classList.remove("hidden");
      } else {
        const data = await response.json();
        console.error("Error response:", data);
        alert("There was a problem sending your message.");
      }
    } catch (error) {
      console.error("Error:", error);
      alert("There was a problem sending your message.");
    }
  });

  // Real-time clock
  function updateClock() {
    const clockElement = document.getElementById("clock");
    const now = new Date();
    
    // Format time as HH:MM:SS AM/PM
    const hours = now.getHours();
    const minutes = now.getMinutes();
    const seconds = now.getSeconds();
    const ampm = hours >= 12 ? 'PM' : 'AM';
    
    const formattedHours = hours % 12 || 12;
    const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;
    const formattedSeconds = seconds < 10 ? `0${seconds}` : seconds;
    
    const timeString = `${formattedHours}:${formattedMinutes}:${formattedSeconds} ${ampm} is Our Time Now`;
    
    clockElement.textContent = timeString;
    clockElement.classList.add('fade-in');
  }

  // Update clock immediately and then every second
  updateClock();
  setInterval(updateClock, 1000);
</script>

<style>
  .fade-in {
    animation: fadeIn 1s ease-in;
  }
  
  @keyframes fadeIn {
    0% { opacity: 0.5; }
    100% { opacity: 0.7; }
  }
  
  .animate-title {
    animation: titleReveal 1.2s cubic-bezier(0.77, 0, 0.175, 1) forwards;
  }
  
  @keyframes titleReveal {
    from {
      opacity: 0;
      transform: translateY(50px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
